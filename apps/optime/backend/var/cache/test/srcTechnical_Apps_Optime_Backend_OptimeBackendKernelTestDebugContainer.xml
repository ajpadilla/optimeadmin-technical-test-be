<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/app/apps/optime/backend/src</parameter>
    <parameter key="kernel.project_dir">/app/apps/optime/backend</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">/app/apps/optime/backend/var/cache/test</parameter>
    <parameter key="kernel.logs_dir">/app/apps/optime/backend/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/app/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcTechnical_Apps_Optime_Backend_OptimeBackendKernelTestDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/app/apps/optime/backend/var/cache/test/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="validator.mapping.cache.file">/app/apps/optime/backend/var/cache/test/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/app/apps/optime/backend/var/cache/test/srcTechnical_Apps_Optime_Backend_OptimeBackendKernelTestDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcTechnical_Apps_Optime_Backend_OptimeBackendKernelTestDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="Technical\Apps\Optime\Backend\OptimeBackendKernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="Technical\Apps\Optime\Backend\Controller\HealthCheck\HealthCheckGetController" class="Technical\Apps\Optime\Backend\Controller\HealthCheck\HealthCheckGetController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Technical\Optime\Customers\GoldClient" class="Technical\Optime\Customers\GoldClient" autowire="true" autoconfigure="true"/>
    <service id="Technical\Optime\Customers\PlatinumClient" class="Technical\Optime\Customers\PlatinumClient" autowire="true" autoconfigure="true"/>
    <service id="Technical\Optime\Customers\SilverClient" class="Technical\Optime\Customers\SilverClient" autowire="true" autoconfigure="true"/>
    <service id="Technical\Optime\ExerciseOne" class="Technical\Optime\ExerciseOne" autowire="true" autoconfigure="true"/>
    <service id="Technical\Optime\ExerciseThree" class="Technical\Optime\ExerciseThree" autowire="true" autoconfigure="true"/>
    <service id="Technical\Optime\ExerciseTwo" class="Technical\Optime\ExerciseTwo" autowire="true" autoconfigure="true"/>
    <service id="Technical\Tests\Unit\ExerciseFourTest" class="Technical\Tests\Unit\ExerciseFourTest" autowire="true" autoconfigure="true"/>
    <service id="Technical\Tests\Unit\ExerciseOneTest" class="Technical\Tests\Unit\ExerciseOneTest" autowire="true" autoconfigure="true"/>
    <service id="Technical\Tests\Unit\ExerciseThreeTest" class="Technical\Tests\Unit\ExerciseThreeTest" autowire="true" autoconfigure="true"/>
    <service id="Technical\Tests\Unit\ExerciseTwoTest" class="Technical\Tests\Unit\ExerciseTwoTest" autowire="true" autoconfigure="true"/>
    <service id=".legacy_controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
      <argument>false</argument>
    </service>
    <service id="controller_resolver" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="argument_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".legacy_resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
      <argument>false</argument>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.html"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="event_dispatcher" class="Symfony\Component\EventDispatcher\EventDispatcher" public="true">
      <tag name="container.hot_path"/>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id=".legacy_resolve_controller_name_subscriber"/>
          <argument>resolveControllerName</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="test.session.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>192</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="test.session.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/app/apps/optime/backend/var/cache/test/srcTechnical_Apps_Optime_Backend_OptimeBackendKernelTestDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/app/apps/optime/backend/src/Resources</argument>
      <argument type="collection">
        <argument>/app/apps/optime/backend/src</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.lLv4pWF"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~FKOdZ5q">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~FKOdZ5q">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~FKOdZ5q"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/app/apps/optime/backend</argument>
      <argument type="service" id=".2_~FKOdZ5q"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>7HIjo7t1gq</argument>
      <argument>0</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Psr16Cache">
      <argument type="service" id="cache.app"/>
      <deprecated package="" version="">The "Psr\SimpleCache\CacheInterface" / "%service_id%" service is deprecated since Symfony 4.3. Use "Symfony\Contracts\Cache\CacheInterface" / "cache.app" instead.</deprecated>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>iNq0Zw7Csv</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>GAK135WmUW</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>wErXen90US</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>gzeukUtWGe</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>waJoEzsQLN</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/app/apps/optime/backend/var/cache/test/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
    <service id="test.session.listener" class="Symfony\Component\HttpKernel\EventListener\TestSessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.3QBvOwf"/>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface $parameterBag" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service" id="logger" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\SimpleCache\CacheInterface" type="service" id="cache.app.simple" on-invalid="ignore_uninitialized"/>
        <argument key="SessionHandlerInterface" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Cache\Adapter\AdapterInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ReverseContainer" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service" id="event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\SessionInterface" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UrlHelper" type="service" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\CacheInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\TagAwareCacheInterface" type="service" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" type="service" id="event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Optime\Customers\GoldClient" type="service" id="Technical\Optime\Customers\GoldClient" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Optime\Customers\PlatinumClient" type="service" id="Technical\Optime\Customers\PlatinumClient" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Optime\Customers\SilverClient" type="service" id="Technical\Optime\Customers\SilverClient" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Optime\ExerciseOne" type="service" id="Technical\Optime\ExerciseOne" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Optime\ExerciseTwo" type="service" id="Technical\Optime\ExerciseTwo" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Tests\Unit\ExerciseFourTest" type="service" id="Technical\Tests\Unit\ExerciseFourTest" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Tests\Unit\ExerciseOneTest" type="service" id="Technical\Tests\Unit\ExerciseOneTest" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Tests\Unit\ExerciseThreeTest" type="service" id="Technical\Tests\Unit\ExerciseThreeTest" on-invalid="ignore_uninitialized"/>
        <argument key="Technical\Tests\Unit\ExerciseTwoTest" type="service" id="Technical\Tests\Unit\ExerciseTwoTest" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service" id="argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service" id=".service_locator.Xbsa8iG" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service" id="argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service" id="argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service" id="argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service" id="argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service" id="argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service" id="argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.simple" type="service" id="cache.app.simple" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.taggable" type="service" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_marshaller" type="service" id="cache.default_marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service" id=".cache_connection.JKE6keX" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service" id=".cache_connection.GD_MSZC" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="controller_name_converter" type="service" id=".legacy_controller_name_converter" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service" id="controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="disallow_search_engine_index_response_listener" type="service" id="disallow_search_engine_index_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.html" type="service" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer" type="service" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.html" type="service" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="exception_listener" type="service" id="exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service" id="logger" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="resolve_controller_name_subscriber" type="service" id=".legacy_resolve_controller_name_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.container" type="service" id="routing.loader.container" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.service" type="service" id="routing.loader.service" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.local_vault" type="service" id="secrets.local_vault" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.vault" type="service" id="secrets.vault" on-invalid="ignore_uninitialized"/>
        <argument key="session.abstract_handler" type="service" id="session.abstract_handler" on-invalid="ignore_uninitialized"/>
        <argument key="session.attribute_bag" type="service" id="session.attribute_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.flash_bag" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native_file" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.save_listener" type="service" id="session.save_listener" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.filesystem" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.metadata_bag" type="service" id="session.storage.metadata_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.mock_file" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.native" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.php_bridge" type="service" id="session.storage.php_bridge" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="streamed_response_listener" type="service" id="streamed_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.cookiejar" type="service" id="test.client.cookiejar" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.history" type="service" id="test.client.history" on-invalid="ignore_uninitialized"/>
        <argument key="test.session.listener" type="service" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="uri_signer" type="service" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="url_helper" type="service" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.adapter" type="service" id="validator.mapping.cache.adapter" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.symfony" type="service" id="validator.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.not_compromised_password" type="service" id="validator.not_compromised_password" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".1_NativeFileSessionHandler~O_w4jVI" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>/app/apps/optime/backend/var/cache/test/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag">
      <factory service="session" method="getFlashBag"/>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag">
      <argument>attributes</argument>
      <factory service="session" method="getBag"/>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/app/apps/optime/backend/var/cache/test/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service" id=".1_NativeFileSessionHandler~O_w4jVI"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.5QWEYtR"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <deprecated package="" version="">The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/app/apps/optime/backend/var/cache/test/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache">
      <argument type="service" id="validator.mapping.cache.adapter"/>
      <deprecated package="" version="">The "%service_id%" service is deprecated since Symfony 4.4. Use validator.mapping.cache.adapter instead.</deprecated>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <argument>/app/apps/optime/backend/var/cache/test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.00bC4GB"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>loose</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter">
      <argument>null</argument>
    </service>
    <service id=".1_LegacyRouteLoaderContainer~xhQDt7m" class="Symfony\Bundle\FrameworkBundle\Routing\LegacyRouteLoaderContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.o0Pyb.U"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader">
      <argument type="service" id="service_container"/>
      <deprecated package="" version="">The "%service_id%" service is deprecated since Symfony 4.4, use "routing.loader.container" instead.</deprecated>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".1_LegacyRouteLoaderContainer~xhQDt7m"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.WOytlHA.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/app/apps/optime/backend/var/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.HLwzKIm.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>/app/apps/optime/backend</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/app/apps/optime/backend/config/secrets/test</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/app/apps/optime/backend/.env.test.local</argument>
    </service>
    <service id=".service_locator.Kbr2i2X" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.Xbsa8iG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.00bC4GB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.lLv4pWF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="logger" class="Symfony\Component\HttpKernel\Log\Logger"/>
    <service id=".service_locator.WOytlHA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.WOytlHA.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.WOytlHA" method="withContext"/>
    </service>
    <service id=".service_locator.HLwzKIm" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.HLwzKIm.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.HLwzKIm" method="withContext"/>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.3QBvOwf" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.5QWEYtR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="request_stack" type="service" id="request_stack"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="session_storage" type="service" id="session.storage.native" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.o0Pyb.U" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="controller_name_converter" alias=".legacy_controller_name_converter">
      <deprecated package="" version="">The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="resolve_controller_name_subscriber" alias=".legacy_resolve_controller_name_subscriber">
      <deprecated package="" version="">The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="error_renderer.html" alias="error_handler.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.html"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.Kbr2i2X" public="true"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.Xbsa8iG"/>
    <service id="Psr\Log\LoggerInterface" alias="logger"/>
  </services>
</container>
